# Generated by Django 5.0.1 on 2025-09-02 16:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("courses", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who created this",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who last updated this",
                        null=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who deleted this",
                        null=True,
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("document", "Document"),
                            ("image", "Image"),
                            ("audio", "Audio"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("mime_type", models.CharField(max_length=100)),
                ("file_size", models.BigIntegerField()),
                ("upload_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("upload_progress", models.FloatField(default=0.0)),
                (
                    "storage_provider",
                    models.CharField(default="backblaze", max_length=50),
                ),
                ("storage_bucket", models.CharField(max_length=100)),
                ("storage_key", models.CharField(max_length=500, unique=True)),
                ("storage_url", models.URLField(max_length=1000)),
                ("cdn_url", models.URLField(blank=True, max_length=1000)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("uploading", "Uploading"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processing_metadata", models.JSONField(blank=True, default=dict)),
                (
                    "duration",
                    models.IntegerField(
                        blank=True, help_text="Duration in seconds", null=True
                    ),
                ),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("bitrate", models.IntegerField(blank=True, null=True)),
                ("resolution", models.CharField(blank=True, max_length=20)),
                ("thumbnail_url", models.URLField(blank=True)),
                (
                    "subtitles",
                    models.URLField(
                        blank=True,
                        help_text="CDN URL of the SRT subtitle file uploaded to Backblaze",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("is_public", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("download_count", models.IntegerField(default=0)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("processing_error", models.TextField(blank=True)),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_files",
                        to="courses.course",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_files",
                        to="courses.coursesection",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_files",
                        to="accounts.userprofile",
                    ),
                ),
            ],
            options={
                "db_table": "media_files",
            },
        ),
        migrations.CreateModel(
            name="UploadSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who created this",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who last updated this",
                        null=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="Supabase User ID who deleted this",
                        null=True,
                    ),
                ),
                ("session_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("total_chunks", models.IntegerField(default=0)),
                ("uploaded_chunks", models.IntegerField(default=0)),
                ("chunk_size", models.IntegerField(default=5242880)),
                ("is_active", models.BooleanField(default=True)),
                ("expires_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "storage_provider",
                    models.CharField(default="backblaze", max_length=50),
                ),
                ("storage_key", models.CharField(max_length=500)),
                ("upload_urls", models.JSONField(default=list)),
                (
                    "media_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="upload_sessions",
                        to="media_library.mediafile",
                    ),
                ),
            ],
            options={
                "db_table": "upload_sessions",
                "permissions": (
                    ("upload_sessions_rls", "Row Level Security for upload sessions"),
                ),
            },
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["user", "file_type"], name="media_files_user_id_69971f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["course", "file_type"], name="media_files_course__2f8534_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["section", "file_type"], name="media_files_section_342ee5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["processing_status", "created_at"],
                name="media_files_process_ddb299_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="uploadsession",
            index=models.Index(
                fields=["session_id"], name="upload_sess_session_d694c5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="uploadsession",
            index=models.Index(
                fields=["is_active", "expires_at"],
                name="upload_sess_is_acti_50b2cb_idx",
            ),
        ),
    ]
